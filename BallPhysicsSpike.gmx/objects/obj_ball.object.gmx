<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
xloc = x;
yloc = room_height - y;
vspd = 0;
hspd = 0;
global.grav = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Translate from screen to cartesian
xloc = x;
yloc = room_height - y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement


//Gravity
if(!place_meeting(xloc, scr_screen_y(yloc-1), obj_wall)){
    vspd += global.grav;
}

//Calculate Unit Vector
vel_mag = sqrt(vspd*vspd + hspd*hspd);
if(vel_mag == 0){
    exit;
}
u_v = vspd/vel_mag;
u_h = hspd/vel_mag;

for(var i = 0; i &lt; vel_mag; i++){
    if(!place_meeting(xloc,scr_screen_y(yloc+ u_v), obj_wall)){
        yloc += u_v;
    }
    else{
        var wall = instance_place(xloc,scr_screen_y(yloc+ u_v), obj_wall);
        vspd = floor(wall.bounce * vspd);
        break;
    }
    
    if(!place_meeting(xloc + u_h, scr_screen_y(yloc), obj_wall)){
        xloc += u_h;
    }
    else{
        var wall = instance_place(xloc + u_h,scr_screen_y(yloc), obj_wall);
        hspd = floor(wall.bounce * hspd);
        break;
    }
}


/*
//Vertical Collisions
if(place_meeting(xloc, scr_screen_y(yloc + vspd), obj_wall)){
    var wall = instance_place(xloc, scr_screen_y(yloc + vspd), obj_wall);
    while(!place_meeting(xloc, scr_screen_y(yloc + sign(vspd)), obj_wall)){
        yloc += sign(vspd);
    }
    vspd = floor(wall.bounce * vspd);
}
else{
    yloc += vspd;
}

//Horizontal Collisions
if(place_meeting(xloc + hspd, scr_screen_y(yloc), obj_wall)){
    wall = instance_place(xloc + hspd, scr_screen_y(yloc), obj_wall);
    while(!place_meeting(xloc + sign(hspd), scr_screen_y(yloc), obj_wall)){
        xloc += sign(hspd);
    }
    hspd = floor(wall.bounce * hspd);
}
else{
    xloc += hspd;
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Translate from cartesian to screen
x = xloc;
y = room_height - yloc;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspd += 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspd += -2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
